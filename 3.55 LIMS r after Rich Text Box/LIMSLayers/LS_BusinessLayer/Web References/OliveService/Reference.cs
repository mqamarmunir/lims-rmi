//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace LS_BusinessLayer.OliveService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IOliveService", Namespace="http://tempuri.org/")]
    public partial class OliveService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SignInOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeactivateDoctorOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToMyVaultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyVaultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFriendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFriendsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnFriendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttributesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchMyVaultOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecipientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetThemOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTestSpecimentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSpecimenTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTestSpecimentListDropDownOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPanelTestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPanelTestRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPanelRequestsDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequestDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPanellegderDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GEtCliqueClinicTestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLabTestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasterTestListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewTestRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateorderstatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OliveService() {
            this.Url = global::LS_BusinessLayer.Properties.Settings.Default.LS_BusinessLayer_OliveService_OliveService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SignInCompletedEventHandler SignInCompleted;
        
        /// <remarks/>
        public event GetDoctorsCompletedEventHandler GetDoctorsCompleted;
        
        /// <remarks/>
        public event DeactivateDoctorCompletedEventHandler DeactivateDoctorCompleted;
        
        /// <remarks/>
        public event AddToMyVaultCompletedEventHandler AddToMyVaultCompleted;
        
        /// <remarks/>
        public event GetMyVaultCompletedEventHandler GetMyVaultCompleted;
        
        /// <remarks/>
        public event GetDoctorsListCompletedEventHandler GetDoctorsListCompleted;
        
        /// <remarks/>
        public event AddFriendCompletedEventHandler AddFriendCompleted;
        
        /// <remarks/>
        public event GetFriendsCompletedEventHandler GetFriendsCompleted;
        
        /// <remarks/>
        public event UnFriendCompletedEventHandler UnFriendCompleted;
        
        /// <remarks/>
        public event GetTestsCompletedEventHandler GetTestsCompleted;
        
        /// <remarks/>
        public event GetAttributesCompletedEventHandler GetAttributesCompleted;
        
        /// <remarks/>
        public event SearchMyVaultCompletedEventHandler SearchMyVaultCompleted;
        
        /// <remarks/>
        public event SearchCompletedEventHandler SearchCompleted;
        
        /// <remarks/>
        public event GetRecipientsCompletedEventHandler GetRecipientsCompleted;
        
        /// <remarks/>
        public event GetThemCompletedEventHandler GetThemCompleted;
        
        /// <remarks/>
        public event SendMessageCompletedEventHandler SendMessageCompleted;
        
        /// <remarks/>
        public event GetTestSpecimentListCompletedEventHandler GetTestSpecimentListCompleted;
        
        /// <remarks/>
        public event AddSpecimenTemplateCompletedEventHandler AddSpecimenTemplateCompleted;
        
        /// <remarks/>
        public event GetResultTemplateCompletedEventHandler GetResultTemplateCompleted;
        
        /// <remarks/>
        public event GetTemplatesCompletedEventHandler GetTemplatesCompleted;
        
        /// <remarks/>
        public event GetTestSpecimentListDropDownCompletedEventHandler GetTestSpecimentListDropDownCompleted;
        
        /// <remarks/>
        public event GetPanelTestsCompletedEventHandler GetPanelTestsCompleted;
        
        /// <remarks/>
        public event GetPanelTestRequestsCompletedEventHandler GetPanelTestRequestsCompleted;
        
        /// <remarks/>
        public event GetPanelRequestsDetailCompletedEventHandler GetPanelRequestsDetailCompleted;
        
        /// <remarks/>
        public event GetRequestDetailsCompletedEventHandler GetRequestDetailsCompleted;
        
        /// <remarks/>
        public event UpdateRequestCompletedEventHandler UpdateRequestCompleted;
        
        /// <remarks/>
        public event GetPanellegderDataCompletedEventHandler GetPanellegderDataCompleted;
        
        /// <remarks/>
        public event GEtCliqueClinicTestsCompletedEventHandler GEtCliqueClinicTestsCompleted;
        
        /// <remarks/>
        public event GetLabTestsCompletedEventHandler GetLabTestsCompleted;
        
        /// <remarks/>
        public event GetMasterTestListCompletedEventHandler GetMasterTestListCompleted;
        
        /// <remarks/>
        public event GetNewTestRequestsCompletedEventHandler GetNewTestRequestsCompleted;
        
        /// <remarks/>
        public event updateorderstatusCompletedEventHandler updateorderstatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/SignIn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public User SignIn([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password) {
            object[] results = this.Invoke("SignIn", new object[] {
                        Username,
                        Password});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void SignInAsync(string Username, string Password) {
            this.SignInAsync(Username, Password, null);
        }
        
        /// <remarks/>
        public void SignInAsync(string Username, string Password, object userState) {
            if ((this.SignInOperationCompleted == null)) {
                this.SignInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignInOperationCompleted);
            }
            this.InvokeAsync("SignIn", new object[] {
                        Username,
                        Password}, this.SignInOperationCompleted, userState);
        }
        
        private void OnSignInOperationCompleted(object arg) {
            if ((this.SignInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignInCompleted(this, new SignInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetDoctors", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetDoctors([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string BranchId) {
            object[] results = this.Invoke("GetDoctors", new object[] {
                        BranchId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorsAsync(string BranchId) {
            this.GetDoctorsAsync(BranchId, null);
        }
        
        /// <remarks/>
        public void GetDoctorsAsync(string BranchId, object userState) {
            if ((this.GetDoctorsOperationCompleted == null)) {
                this.GetDoctorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorsOperationCompleted);
            }
            this.InvokeAsync("GetDoctors", new object[] {
                        BranchId}, this.GetDoctorsOperationCompleted, userState);
        }
        
        private void OnGetDoctorsOperationCompleted(object arg) {
            if ((this.GetDoctorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorsCompleted(this, new GetDoctorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/DeactivateDoctor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeactivateDoctor([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DoctorId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ClinicBranchId, out int DeactivateDoctorResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeactivateDoctorResultSpecified) {
            object[] results = this.Invoke("DeactivateDoctor", new object[] {
                        DoctorId,
                        ClinicBranchId});
            DeactivateDoctorResult = ((int)(results[0]));
            DeactivateDoctorResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeactivateDoctorAsync(string DoctorId, string ClinicBranchId) {
            this.DeactivateDoctorAsync(DoctorId, ClinicBranchId, null);
        }
        
        /// <remarks/>
        public void DeactivateDoctorAsync(string DoctorId, string ClinicBranchId, object userState) {
            if ((this.DeactivateDoctorOperationCompleted == null)) {
                this.DeactivateDoctorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeactivateDoctorOperationCompleted);
            }
            this.InvokeAsync("DeactivateDoctor", new object[] {
                        DoctorId,
                        ClinicBranchId}, this.DeactivateDoctorOperationCompleted, userState);
        }
        
        private void OnDeactivateDoctorOperationCompleted(object arg) {
            if ((this.DeactivateDoctorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeactivateDoctorCompleted(this, new DeactivateDoctorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/AddToMyVault", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddToMyVault([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Vault myVault, out int AddToMyVaultResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddToMyVaultResultSpecified) {
            object[] results = this.Invoke("AddToMyVault", new object[] {
                        myVault});
            AddToMyVaultResult = ((int)(results[0]));
            AddToMyVaultResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AddToMyVaultAsync(Vault myVault) {
            this.AddToMyVaultAsync(myVault, null);
        }
        
        /// <remarks/>
        public void AddToMyVaultAsync(Vault myVault, object userState) {
            if ((this.AddToMyVaultOperationCompleted == null)) {
                this.AddToMyVaultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToMyVaultOperationCompleted);
            }
            this.InvokeAsync("AddToMyVault", new object[] {
                        myVault}, this.AddToMyVaultOperationCompleted, userState);
        }
        
        private void OnAddToMyVaultOperationCompleted(object arg) {
            if ((this.AddToMyVaultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToMyVaultCompleted(this, new AddToMyVaultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetMyVault", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetMyVault([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PersonId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string BranchId) {
            object[] results = this.Invoke("GetMyVault", new object[] {
                        PersonId,
                        BranchId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyVaultAsync(string PersonId, string BranchId) {
            this.GetMyVaultAsync(PersonId, BranchId, null);
        }
        
        /// <remarks/>
        public void GetMyVaultAsync(string PersonId, string BranchId, object userState) {
            if ((this.GetMyVaultOperationCompleted == null)) {
                this.GetMyVaultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyVaultOperationCompleted);
            }
            this.InvokeAsync("GetMyVault", new object[] {
                        PersonId,
                        BranchId}, this.GetMyVaultOperationCompleted, userState);
        }
        
        private void OnGetMyVaultOperationCompleted(object arg) {
            if ((this.GetMyVaultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyVaultCompleted(this, new GetMyVaultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetDoctorsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetDoctorsList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PersonId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastDoctorID) {
            object[] results = this.Invoke("GetDoctorsList", new object[] {
                        PersonId,
                        lastDoctorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorsListAsync(string PersonId, string lastDoctorID) {
            this.GetDoctorsListAsync(PersonId, lastDoctorID, null);
        }
        
        /// <remarks/>
        public void GetDoctorsListAsync(string PersonId, string lastDoctorID, object userState) {
            if ((this.GetDoctorsListOperationCompleted == null)) {
                this.GetDoctorsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorsListOperationCompleted);
            }
            this.InvokeAsync("GetDoctorsList", new object[] {
                        PersonId,
                        lastDoctorID}, this.GetDoctorsListOperationCompleted, userState);
        }
        
        private void OnGetDoctorsListOperationCompleted(object arg) {
            if ((this.GetDoctorsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorsListCompleted(this, new GetDoctorsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/AddFriend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AddFriend([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PersonID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DoctorID) {
            object[] results = this.Invoke("AddFriend", new object[] {
                        PersonID,
                        DoctorID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFriendAsync(string PersonID, string DoctorID) {
            this.AddFriendAsync(PersonID, DoctorID, null);
        }
        
        /// <remarks/>
        public void AddFriendAsync(string PersonID, string DoctorID, object userState) {
            if ((this.AddFriendOperationCompleted == null)) {
                this.AddFriendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFriendOperationCompleted);
            }
            this.InvokeAsync("AddFriend", new object[] {
                        PersonID,
                        DoctorID}, this.AddFriendOperationCompleted, userState);
        }
        
        private void OnAddFriendOperationCompleted(object arg) {
            if ((this.AddFriendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFriendCompleted(this, new AddFriendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetFriends", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetFriends([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PersonID) {
            object[] results = this.Invoke("GetFriends", new object[] {
                        PersonID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFriendsAsync(string PersonID) {
            this.GetFriendsAsync(PersonID, null);
        }
        
        /// <remarks/>
        public void GetFriendsAsync(string PersonID, object userState) {
            if ((this.GetFriendsOperationCompleted == null)) {
                this.GetFriendsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFriendsOperationCompleted);
            }
            this.InvokeAsync("GetFriends", new object[] {
                        PersonID}, this.GetFriendsOperationCompleted, userState);
        }
        
        private void OnGetFriendsOperationCompleted(object arg) {
            if ((this.GetFriendsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFriendsCompleted(this, new GetFriendsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/UnFriend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UnFriend([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PersonID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DoctorID) {
            object[] results = this.Invoke("UnFriend", new object[] {
                        PersonID,
                        DoctorID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnFriendAsync(string PersonID, string DoctorID) {
            this.UnFriendAsync(PersonID, DoctorID, null);
        }
        
        /// <remarks/>
        public void UnFriendAsync(string PersonID, string DoctorID, object userState) {
            if ((this.UnFriendOperationCompleted == null)) {
                this.UnFriendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnFriendOperationCompleted);
            }
            this.InvokeAsync("UnFriend", new object[] {
                        PersonID,
                        DoctorID}, this.UnFriendOperationCompleted, userState);
        }
        
        private void OnUnFriendOperationCompleted(object arg) {
            if ((this.UnFriendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnFriendCompleted(this, new UnFriendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetTests", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
        public TestInfo[] GetTests([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string term) {
            object[] results = this.Invoke("GetTests", new object[] {
                        term});
            return ((TestInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTestsAsync(string term) {
            this.GetTestsAsync(term, null);
        }
        
        /// <remarks/>
        public void GetTestsAsync(string term, object userState) {
            if ((this.GetTestsOperationCompleted == null)) {
                this.GetTestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestsOperationCompleted);
            }
            this.InvokeAsync("GetTests", new object[] {
                        term}, this.GetTestsOperationCompleted, userState);
        }
        
        private void OnGetTestsOperationCompleted(object arg) {
            if ((this.GetTestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestsCompleted(this, new GetTestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetAttributes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
        public AttributeInfo[] GetAttributes([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string vt_datam_Id) {
            object[] results = this.Invoke("GetAttributes", new object[] {
                        vt_datam_Id});
            return ((AttributeInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAttributesAsync(string vt_datam_Id) {
            this.GetAttributesAsync(vt_datam_Id, null);
        }
        
        /// <remarks/>
        public void GetAttributesAsync(string vt_datam_Id, object userState) {
            if ((this.GetAttributesOperationCompleted == null)) {
                this.GetAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttributesOperationCompleted);
            }
            this.InvokeAsync("GetAttributes", new object[] {
                        vt_datam_Id}, this.GetAttributesOperationCompleted, userState);
        }
        
        private void OnGetAttributesOperationCompleted(object arg) {
            if ((this.GetAttributesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttributesCompleted(this, new GetAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/SearchMyVault", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet SearchMyVault([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PersonId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string BranchId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TestName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AttributeName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AttributeMinRange, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AttributeMaxRange, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Gender, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MinAge, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MaxAge) {
            object[] results = this.Invoke("SearchMyVault", new object[] {
                        PersonId,
                        BranchId,
                        TestName,
                        AttributeName,
                        AttributeMinRange,
                        AttributeMaxRange,
                        Gender,
                        MinAge,
                        MaxAge});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchMyVaultAsync(string PersonId, string BranchId, string TestName, string AttributeName, string AttributeMinRange, string AttributeMaxRange, string Gender, string MinAge, string MaxAge) {
            this.SearchMyVaultAsync(PersonId, BranchId, TestName, AttributeName, AttributeMinRange, AttributeMaxRange, Gender, MinAge, MaxAge, null);
        }
        
        /// <remarks/>
        public void SearchMyVaultAsync(string PersonId, string BranchId, string TestName, string AttributeName, string AttributeMinRange, string AttributeMaxRange, string Gender, string MinAge, string MaxAge, object userState) {
            if ((this.SearchMyVaultOperationCompleted == null)) {
                this.SearchMyVaultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchMyVaultOperationCompleted);
            }
            this.InvokeAsync("SearchMyVault", new object[] {
                        PersonId,
                        BranchId,
                        TestName,
                        AttributeName,
                        AttributeMinRange,
                        AttributeMaxRange,
                        Gender,
                        MinAge,
                        MaxAge}, this.SearchMyVaultOperationCompleted, userState);
        }
        
        private void OnSearchMyVaultOperationCompleted(object arg) {
            if ((this.SearchMyVaultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchMyVaultCompleted(this, new SearchMyVaultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/Search", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SearchResult Search([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PersonID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string term, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string flag) {
            object[] results = this.Invoke("Search", new object[] {
                        PersonID,
                        term,
                        flag});
            return ((SearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAsync(string PersonID, string term, string flag) {
            this.SearchAsync(PersonID, term, flag, null);
        }
        
        /// <remarks/>
        public void SearchAsync(string PersonID, string term, string flag, object userState) {
            if ((this.SearchOperationCompleted == null)) {
                this.SearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchOperationCompleted);
            }
            this.InvokeAsync("Search", new object[] {
                        PersonID,
                        term,
                        flag}, this.SearchOperationCompleted, userState);
        }
        
        private void OnSearchOperationCompleted(object arg) {
            if ((this.SearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCompleted(this, new SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetRecipients", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
        public Recipient[] GetRecipients([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PersonID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string term) {
            object[] results = this.Invoke("GetRecipients", new object[] {
                        PersonID,
                        term});
            return ((Recipient[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRecipientsAsync(string PersonID, string term) {
            this.GetRecipientsAsync(PersonID, term, null);
        }
        
        /// <remarks/>
        public void GetRecipientsAsync(string PersonID, string term, object userState) {
            if ((this.GetRecipientsOperationCompleted == null)) {
                this.GetRecipientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecipientsOperationCompleted);
            }
            this.InvokeAsync("GetRecipients", new object[] {
                        PersonID,
                        term}, this.GetRecipientsOperationCompleted, userState);
        }
        
        private void OnGetRecipientsOperationCompleted(object arg) {
            if ((this.GetRecipientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecipientsCompleted(this, new GetRecipientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetThem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
        public Recipient[] GetThem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string query) {
            object[] results = this.Invoke("GetThem", new object[] {
                        userID,
                        query});
            return ((Recipient[])(results[0]));
        }
        
        /// <remarks/>
        public void GetThemAsync(string userID, string query) {
            this.GetThemAsync(userID, query, null);
        }
        
        /// <remarks/>
        public void GetThemAsync(string userID, string query, object userState) {
            if ((this.GetThemOperationCompleted == null)) {
                this.GetThemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetThemOperationCompleted);
            }
            this.InvokeAsync("GetThem", new object[] {
                        userID,
                        query}, this.GetThemOperationCompleted, userState);
        }
        
        private void OnGetThemOperationCompleted(object arg) {
            if ((this.GetThemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetThemCompleted(this, new GetThemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/SendMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SendMessage([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] recipients, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Subject, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Message, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string LabID) {
            object[] results = this.Invoke("SendMessage", new object[] {
                        recipients,
                        Subject,
                        Message,
                        UserID,
                        LabID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMessageAsync(string[] recipients, string Subject, string Message, string UserID, string LabID) {
            this.SendMessageAsync(recipients, Subject, Message, UserID, LabID, null);
        }
        
        /// <remarks/>
        public void SendMessageAsync(string[] recipients, string Subject, string Message, string UserID, string LabID, object userState) {
            if ((this.SendMessageOperationCompleted == null)) {
                this.SendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageOperationCompleted);
            }
            this.InvokeAsync("SendMessage", new object[] {
                        recipients,
                        Subject,
                        Message,
                        UserID,
                        LabID}, this.SendMessageOperationCompleted, userState);
        }
        
        private void OnSendMessageOperationCompleted(object arg) {
            if ((this.SendMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageCompleted(this, new SendMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetTestSpecimentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
        public Specimen[] GetTestSpecimentList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CliqSpecimenID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TestType) {
            object[] results = this.Invoke("GetTestSpecimentList", new object[] {
                        CliqSpecimenID,
                        TestType});
            return ((Specimen[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTestSpecimentListAsync(string CliqSpecimenID, string TestType) {
            this.GetTestSpecimentListAsync(CliqSpecimenID, TestType, null);
        }
        
        /// <remarks/>
        public void GetTestSpecimentListAsync(string CliqSpecimenID, string TestType, object userState) {
            if ((this.GetTestSpecimentListOperationCompleted == null)) {
                this.GetTestSpecimentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestSpecimentListOperationCompleted);
            }
            this.InvokeAsync("GetTestSpecimentList", new object[] {
                        CliqSpecimenID,
                        TestType}, this.GetTestSpecimentListOperationCompleted, userState);
        }
        
        private void OnGetTestSpecimentListOperationCompleted(object arg) {
            if ((this.GetTestSpecimentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestSpecimentListCompleted(this, new GetTestSpecimentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/AddSpecimenTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddSpecimenTemplate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SpecimenTemplate template, out int AddSpecimenTemplateResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddSpecimenTemplateResultSpecified) {
            object[] results = this.Invoke("AddSpecimenTemplate", new object[] {
                        template});
            AddSpecimenTemplateResult = ((int)(results[0]));
            AddSpecimenTemplateResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AddSpecimenTemplateAsync(SpecimenTemplate template) {
            this.AddSpecimenTemplateAsync(template, null);
        }
        
        /// <remarks/>
        public void AddSpecimenTemplateAsync(SpecimenTemplate template, object userState) {
            if ((this.AddSpecimenTemplateOperationCompleted == null)) {
                this.AddSpecimenTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSpecimenTemplateOperationCompleted);
            }
            this.InvokeAsync("AddSpecimenTemplate", new object[] {
                        template}, this.AddSpecimenTemplateOperationCompleted, userState);
        }
        
        private void OnAddSpecimenTemplateOperationCompleted(object arg) {
            if ((this.AddSpecimenTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSpecimenTemplateCompleted(this, new AddSpecimenTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetResultTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
        public ResultTemplate[] GetResultTemplate(int SpecimenID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SpecimenIDSpecified, int UserID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool UserIDSpecified) {
            object[] results = this.Invoke("GetResultTemplate", new object[] {
                        SpecimenID,
                        SpecimenIDSpecified,
                        UserID,
                        UserIDSpecified});
            return ((ResultTemplate[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResultTemplateAsync(int SpecimenID, bool SpecimenIDSpecified, int UserID, bool UserIDSpecified) {
            this.GetResultTemplateAsync(SpecimenID, SpecimenIDSpecified, UserID, UserIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetResultTemplateAsync(int SpecimenID, bool SpecimenIDSpecified, int UserID, bool UserIDSpecified, object userState) {
            if ((this.GetResultTemplateOperationCompleted == null)) {
                this.GetResultTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultTemplateOperationCompleted);
            }
            this.InvokeAsync("GetResultTemplate", new object[] {
                        SpecimenID,
                        SpecimenIDSpecified,
                        UserID,
                        UserIDSpecified}, this.GetResultTemplateOperationCompleted, userState);
        }
        
        private void OnGetResultTemplateOperationCompleted(object arg) {
            if ((this.GetResultTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultTemplateCompleted(this, new GetResultTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetTemplates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
        public AllTemplate[] GetTemplates(int SpecimenID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SpecimenIDSpecified, long TestID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool TestIDSpecified, int UserID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool UserIDSpecified) {
            object[] results = this.Invoke("GetTemplates", new object[] {
                        SpecimenID,
                        SpecimenIDSpecified,
                        TestID,
                        TestIDSpecified,
                        UserID,
                        UserIDSpecified});
            return ((AllTemplate[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplatesAsync(int SpecimenID, bool SpecimenIDSpecified, long TestID, bool TestIDSpecified, int UserID, bool UserIDSpecified) {
            this.GetTemplatesAsync(SpecimenID, SpecimenIDSpecified, TestID, TestIDSpecified, UserID, UserIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetTemplatesAsync(int SpecimenID, bool SpecimenIDSpecified, long TestID, bool TestIDSpecified, int UserID, bool UserIDSpecified, object userState) {
            if ((this.GetTemplatesOperationCompleted == null)) {
                this.GetTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplatesOperationCompleted);
            }
            this.InvokeAsync("GetTemplates", new object[] {
                        SpecimenID,
                        SpecimenIDSpecified,
                        TestID,
                        TestIDSpecified,
                        UserID,
                        UserIDSpecified}, this.GetTemplatesOperationCompleted, userState);
        }
        
        private void OnGetTemplatesOperationCompleted(object arg) {
            if ((this.GetTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplatesCompleted(this, new GetTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetTestSpecimentListDropDown", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
        public SpecimenDropDown[] GetTestSpecimentListDropDown([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CliqSpecimenID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TestType) {
            object[] results = this.Invoke("GetTestSpecimentListDropDown", new object[] {
                        CliqSpecimenID,
                        TestType});
            return ((SpecimenDropDown[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTestSpecimentListDropDownAsync(string CliqSpecimenID, string TestType) {
            this.GetTestSpecimentListDropDownAsync(CliqSpecimenID, TestType, null);
        }
        
        /// <remarks/>
        public void GetTestSpecimentListDropDownAsync(string CliqSpecimenID, string TestType, object userState) {
            if ((this.GetTestSpecimentListDropDownOperationCompleted == null)) {
                this.GetTestSpecimentListDropDownOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestSpecimentListDropDownOperationCompleted);
            }
            this.InvokeAsync("GetTestSpecimentListDropDown", new object[] {
                        CliqSpecimenID,
                        TestType}, this.GetTestSpecimentListDropDownOperationCompleted, userState);
        }
        
        private void OnGetTestSpecimentListDropDownOperationCompleted(object arg) {
            if ((this.GetTestSpecimentListDropDownCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestSpecimentListDropDownCompleted(this, new GetTestSpecimentListDropDownCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetPanelTests", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
        public PanelTest[] GetPanelTests(int CliqPanelID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool CliqPanelIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ConnectionString) {
            object[] results = this.Invoke("GetPanelTests", new object[] {
                        CliqPanelID,
                        CliqPanelIDSpecified,
                        ConnectionString});
            return ((PanelTest[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPanelTestsAsync(int CliqPanelID, bool CliqPanelIDSpecified, string ConnectionString) {
            this.GetPanelTestsAsync(CliqPanelID, CliqPanelIDSpecified, ConnectionString, null);
        }
        
        /// <remarks/>
        public void GetPanelTestsAsync(int CliqPanelID, bool CliqPanelIDSpecified, string ConnectionString, object userState) {
            if ((this.GetPanelTestsOperationCompleted == null)) {
                this.GetPanelTestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPanelTestsOperationCompleted);
            }
            this.InvokeAsync("GetPanelTests", new object[] {
                        CliqPanelID,
                        CliqPanelIDSpecified,
                        ConnectionString}, this.GetPanelTestsOperationCompleted, userState);
        }
        
        private void OnGetPanelTestsOperationCompleted(object arg) {
            if ((this.GetPanelTestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPanelTestsCompleted(this, new GetPanelTestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetPanelTestRequests", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetPanelTestRequests([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clinicid) {
            object[] results = this.Invoke("GetPanelTestRequests", new object[] {
                        clinicid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPanelTestRequestsAsync(string clinicid) {
            this.GetPanelTestRequestsAsync(clinicid, null);
        }
        
        /// <remarks/>
        public void GetPanelTestRequestsAsync(string clinicid, object userState) {
            if ((this.GetPanelTestRequestsOperationCompleted == null)) {
                this.GetPanelTestRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPanelTestRequestsOperationCompleted);
            }
            this.InvokeAsync("GetPanelTestRequests", new object[] {
                        clinicid}, this.GetPanelTestRequestsOperationCompleted, userState);
        }
        
        private void OnGetPanelTestRequestsOperationCompleted(object arg) {
            if ((this.GetPanelTestRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPanelTestRequestsCompleted(this, new GetPanelTestRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetPanelRequestsDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetPanelRequestsDetail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string panelid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clinicbranch) {
            object[] results = this.Invoke("GetPanelRequestsDetail", new object[] {
                        panelid,
                        clinicbranch});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPanelRequestsDetailAsync(string panelid, string clinicbranch) {
            this.GetPanelRequestsDetailAsync(panelid, clinicbranch, null);
        }
        
        /// <remarks/>
        public void GetPanelRequestsDetailAsync(string panelid, string clinicbranch, object userState) {
            if ((this.GetPanelRequestsDetailOperationCompleted == null)) {
                this.GetPanelRequestsDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPanelRequestsDetailOperationCompleted);
            }
            this.InvokeAsync("GetPanelRequestsDetail", new object[] {
                        panelid,
                        clinicbranch}, this.GetPanelRequestsDetailOperationCompleted, userState);
        }
        
        private void OnGetPanelRequestsDetailOperationCompleted(object arg) {
            if ((this.GetPanelRequestsDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPanelRequestsDetailCompleted(this, new GetPanelRequestsDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetRequestDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetRequestDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string masterid) {
            object[] results = this.Invoke("GetRequestDetails", new object[] {
                        masterid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRequestDetailsAsync(string masterid) {
            this.GetRequestDetailsAsync(masterid, null);
        }
        
        /// <remarks/>
        public void GetRequestDetailsAsync(string masterid, object userState) {
            if ((this.GetRequestDetailsOperationCompleted == null)) {
                this.GetRequestDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequestDetailsOperationCompleted);
            }
            this.InvokeAsync("GetRequestDetails", new object[] {
                        masterid}, this.GetRequestDetailsOperationCompleted, userState);
        }
        
        private void OnGetRequestDetailsOperationCompleted(object arg) {
            if ((this.GetRequestDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequestDetailsCompleted(this, new GetRequestDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/UpdateRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UpdateRequest([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ApproveorReject, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string masterid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string personid) {
            object[] results = this.Invoke("UpdateRequest", new object[] {
                        ApproveorReject,
                        masterid,
                        personid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRequestAsync(string ApproveorReject, string masterid, string personid) {
            this.UpdateRequestAsync(ApproveorReject, masterid, personid, null);
        }
        
        /// <remarks/>
        public void UpdateRequestAsync(string ApproveorReject, string masterid, string personid, object userState) {
            if ((this.UpdateRequestOperationCompleted == null)) {
                this.UpdateRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRequestOperationCompleted);
            }
            this.InvokeAsync("UpdateRequest", new object[] {
                        ApproveorReject,
                        masterid,
                        personid}, this.UpdateRequestOperationCompleted, userState);
        }
        
        private void OnUpdateRequestOperationCompleted(object arg) {
            if ((this.UpdateRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRequestCompleted(this, new UpdateRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetPanellegderData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetPanellegderData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fromdate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string todate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string panelid) {
            object[] results = this.Invoke("GetPanellegderData", new object[] {
                        fromdate,
                        todate,
                        panelid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPanellegderDataAsync(string fromdate, string todate, string panelid) {
            this.GetPanellegderDataAsync(fromdate, todate, panelid, null);
        }
        
        /// <remarks/>
        public void GetPanellegderDataAsync(string fromdate, string todate, string panelid, object userState) {
            if ((this.GetPanellegderDataOperationCompleted == null)) {
                this.GetPanellegderDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPanellegderDataOperationCompleted);
            }
            this.InvokeAsync("GetPanellegderData", new object[] {
                        fromdate,
                        todate,
                        panelid}, this.GetPanellegderDataOperationCompleted, userState);
        }
        
        private void OnGetPanellegderDataOperationCompleted(object arg) {
            if ((this.GetPanellegderDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPanellegderDataCompleted(this, new GetPanellegderDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GEtCliqueClinicTests", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GEtCliqueClinicTests() {
            object[] results = this.Invoke("GEtCliqueClinicTests", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GEtCliqueClinicTestsAsync() {
            this.GEtCliqueClinicTestsAsync(null);
        }
        
        /// <remarks/>
        public void GEtCliqueClinicTestsAsync(object userState) {
            if ((this.GEtCliqueClinicTestsOperationCompleted == null)) {
                this.GEtCliqueClinicTestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGEtCliqueClinicTestsOperationCompleted);
            }
            this.InvokeAsync("GEtCliqueClinicTests", new object[0], this.GEtCliqueClinicTestsOperationCompleted, userState);
        }
        
        private void OnGEtCliqueClinicTestsOperationCompleted(object arg) {
            if ((this.GEtCliqueClinicTestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GEtCliqueClinicTestsCompleted(this, new GEtCliqueClinicTestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetLabTests", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
        public PanelTest[] GetLabTests([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ConnectionString) {
            object[] results = this.Invoke("GetLabTests", new object[] {
                        ConnectionString});
            return ((PanelTest[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLabTestsAsync(string ConnectionString) {
            this.GetLabTestsAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void GetLabTestsAsync(string ConnectionString, object userState) {
            if ((this.GetLabTestsOperationCompleted == null)) {
                this.GetLabTestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLabTestsOperationCompleted);
            }
            this.InvokeAsync("GetLabTests", new object[] {
                        ConnectionString}, this.GetLabTestsOperationCompleted, userState);
        }
        
        private void OnGetLabTestsOperationCompleted(object arg) {
            if ((this.GetLabTestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLabTestsCompleted(this, new GetLabTestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetMasterTestList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
        public PanelTest[] GetMasterTestList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Conn) {
            object[] results = this.Invoke("GetMasterTestList", new object[] {
                        Conn});
            return ((PanelTest[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMasterTestListAsync(string Conn) {
            this.GetMasterTestListAsync(Conn, null);
        }
        
        /// <remarks/>
        public void GetMasterTestListAsync(string Conn, object userState) {
            if ((this.GetMasterTestListOperationCompleted == null)) {
                this.GetMasterTestListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasterTestListOperationCompleted);
            }
            this.InvokeAsync("GetMasterTestList", new object[] {
                        Conn}, this.GetMasterTestListOperationCompleted, userState);
        }
        
        private void OnGetMasterTestListOperationCompleted(object arg) {
            if ((this.GetMasterTestListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasterTestListCompleted(this, new GetMasterTestListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/GetNewTestRequests", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetNewTestRequests([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string BranchID) {
            object[] results = this.Invoke("GetNewTestRequests", new object[] {
                        BranchID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewTestRequestsAsync(string BranchID) {
            this.GetNewTestRequestsAsync(BranchID, null);
        }
        
        /// <remarks/>
        public void GetNewTestRequestsAsync(string BranchID, object userState) {
            if ((this.GetNewTestRequestsOperationCompleted == null)) {
                this.GetNewTestRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewTestRequestsOperationCompleted);
            }
            this.InvokeAsync("GetNewTestRequests", new object[] {
                        BranchID}, this.GetNewTestRequestsOperationCompleted, userState);
        }
        
        private void OnGetNewTestRequestsOperationCompleted(object arg) {
            if ((this.GetNewTestRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewTestRequestsCompleted(this, new GetNewTestRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOliveService/updateorderstatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string updateorderstatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string orderid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string processid) {
            object[] results = this.Invoke("updateorderstatus", new object[] {
                        orderid,
                        processid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateorderstatusAsync(string orderid, string processid) {
            this.updateorderstatusAsync(orderid, processid, null);
        }
        
        /// <remarks/>
        public void updateorderstatusAsync(string orderid, string processid, object userState) {
            if ((this.updateorderstatusOperationCompleted == null)) {
                this.updateorderstatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateorderstatusOperationCompleted);
            }
            this.InvokeAsync("updateorderstatus", new object[] {
                        orderid,
                        processid}, this.updateorderstatusOperationCompleted, userState);
        }
        
        private void OnupdateorderstatusOperationCompleted(object arg) {
            if ((this.updateorderstatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateorderstatusCompleted(this, new updateorderstatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class User {
        
        private string branchIDField;
        
        private string limsMapIDField;
        
        private string passwordField;
        
        private string userIDField;
        
        private string usernameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BranchID {
            get {
                return this.branchIDField;
            }
            set {
                this.branchIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LimsMapID {
            get {
                return this.limsMapIDField;
            }
            set {
                this.limsMapIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class PanelTest {
        
        private int panelCliqIDField;
        
        private bool panelCliqIDFieldSpecified;
        
        private int panelIDField;
        
        private bool panelIDFieldSpecified;
        
        private string panelNameField;
        
        private long rateField;
        
        private bool rateFieldSpecified;
        
        private int testIDField;
        
        private bool testIDFieldSpecified;
        
        private string testNameField;
        
        /// <remarks/>
        public int PanelCliqID {
            get {
                return this.panelCliqIDField;
            }
            set {
                this.panelCliqIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PanelCliqIDSpecified {
            get {
                return this.panelCliqIDFieldSpecified;
            }
            set {
                this.panelCliqIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int PanelID {
            get {
                return this.panelIDField;
            }
            set {
                this.panelIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PanelIDSpecified {
            get {
                return this.panelIDFieldSpecified;
            }
            set {
                this.panelIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PanelName {
            get {
                return this.panelNameField;
            }
            set {
                this.panelNameField = value;
            }
        }
        
        /// <remarks/>
        public long Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RateSpecified {
            get {
                return this.rateFieldSpecified;
            }
            set {
                this.rateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int TestID {
            get {
                return this.testIDField;
            }
            set {
                this.testIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TestIDSpecified {
            get {
                return this.testIDFieldSpecified;
            }
            set {
                this.testIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TestName {
            get {
                return this.testNameField;
            }
            set {
                this.testNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class SpecimenDropDown {
        
        private bool selectedField;
        
        private bool selectedFieldSpecified;
        
        private string textField;
        
        private string valueField;
        
        /// <remarks/>
        public bool Selected {
            get {
                return this.selectedField;
            }
            set {
                this.selectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SelectedSpecified {
            get {
                return this.selectedFieldSpecified;
            }
            set {
                this.selectedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class AllTemplate {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private System.DateTime lastModifiedField;
        
        private bool lastModifiedFieldSpecified;
        
        private string templateCodeField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastModifiedSpecified {
            get {
                return this.lastModifiedFieldSpecified;
            }
            set {
                this.lastModifiedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TemplateCode {
            get {
                return this.templateCodeField;
            }
            set {
                this.templateCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class ResultTemplate {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private int limsAttributeIDField;
        
        private bool limsAttributeIDFieldSpecified;
        
        private string limsAttributeNameField;
        
        private string resultField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int LimsAttributeID {
            get {
                return this.limsAttributeIDField;
            }
            set {
                this.limsAttributeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LimsAttributeIDSpecified {
            get {
                return this.limsAttributeIDFieldSpecified;
            }
            set {
                this.limsAttributeIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LimsAttributeName {
            get {
                return this.limsAttributeNameField;
            }
            set {
                this.limsAttributeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class AttributeResult {
        
        private long attributeIDField;
        
        private bool attributeIDFieldSpecified;
        
        private string attributeNameField;
        
        private string resultField;
        
        /// <remarks/>
        public long AttributeID {
            get {
                return this.attributeIDField;
            }
            set {
                this.attributeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AttributeIDSpecified {
            get {
                return this.attributeIDFieldSpecified;
            }
            set {
                this.attributeIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AttributeName {
            get {
                return this.attributeNameField;
            }
            set {
                this.attributeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class SpecimenTemplate {
        
        private AttributeResult[] attributesResultField;
        
        private long enteredByField;
        
        private bool enteredByFieldSpecified;
        
        private int specimenIDField;
        
        private bool specimenIDFieldSpecified;
        
        private long testIDField;
        
        private bool testIDFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public AttributeResult[] AttributesResult {
            get {
                return this.attributesResultField;
            }
            set {
                this.attributesResultField = value;
            }
        }
        
        /// <remarks/>
        public long EnteredBy {
            get {
                return this.enteredByField;
            }
            set {
                this.enteredByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnteredBySpecified {
            get {
                return this.enteredByFieldSpecified;
            }
            set {
                this.enteredByFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int SpecimenID {
            get {
                return this.specimenIDField;
            }
            set {
                this.specimenIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpecimenIDSpecified {
            get {
                return this.specimenIDFieldSpecified;
            }
            set {
                this.specimenIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long TestID {
            get {
                return this.testIDField;
            }
            set {
                this.testIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TestIDSpecified {
            get {
                return this.testIDFieldSpecified;
            }
            set {
                this.testIDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class Specimen {
        
        private string idField;
        
        private bool selectedField;
        
        private bool selectedFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public bool selected {
            get {
                return this.selectedField;
            }
            set {
                this.selectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool selectedSpecified {
            get {
                return this.selectedFieldSpecified;
            }
            set {
                this.selectedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class Recipient {
        
        private string imageNameField;
        
        private string emailField;
        
        private string first_nameField;
        
        private string idField;
        
        private string last_nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ImageName {
            get {
                return this.imageNameField;
            }
            set {
                this.imageNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string first_name {
            get {
                return this.first_nameField;
            }
            set {
                this.first_nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string last_name {
            get {
                return this.last_nameField;
            }
            set {
                this.last_nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class Doctor {
        
        private string doctorIDField;
        
        private string doctorNameField;
        
        private string imageNameField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DoctorID {
            get {
                return this.doctorIDField;
            }
            set {
                this.doctorIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DoctorName {
            get {
                return this.doctorNameField;
            }
            set {
                this.doctorNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ImageName {
            get {
                return this.imageNameField;
            }
            set {
                this.imageNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class Connection {
        
        private string connectionIDField;
        
        private string connectionNameField;
        
        private string imageNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ConnectionID {
            get {
                return this.connectionIDField;
            }
            set {
                this.connectionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ConnectionName {
            get {
                return this.connectionNameField;
            }
            set {
                this.connectionNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ImageName {
            get {
                return this.imageNameField;
            }
            set {
                this.imageNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class SearchResult {
        
        private Connection[] connectionsField;
        
        private Doctor[] doctorsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Connection[] connections {
            get {
                return this.connectionsField;
            }
            set {
                this.connectionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Doctor[] doctors {
            get {
                return this.doctorsField;
            }
            set {
                this.doctorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class AttributeInfo {
        
        private string idField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class TestInfo {
        
        private string idField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class VaultPatientInfo {
        
        private string branchIDField;
        
        private System.Nullable<long> f_ParentField;
        
        private bool f_ParentFieldSpecified;
        
        private string paswordField;
        
        private string personIDField;
        
        private System.Nullable<long> s_ParentField;
        
        private bool s_ParentFieldSpecified;
        
        private long testIDField;
        
        private bool testIDFieldSpecified;
        
        private string testNameField;
        
        private string testTypeField;
        
        private string addressField;
        
        private System.Nullable<long> cellnoField;
        
        private bool cellnoFieldSpecified;
        
        private System.Nullable<long> classidField;
        
        private bool classidFieldSpecified;
        
        private string clientidField;
        
        private string cnicField;
        
        private string dobField;
        
        private string emailField;
        
        private string enteredbyField;
        
        private System.DateTime enteredonField;
        
        private bool enteredonFieldSpecified;
        
        private System.Nullable<long> faxField;
        
        private bool faxFieldSpecified;
        
        private string genderField;
        
        private System.Nullable<long> hphoneField;
        
        private bool hphoneFieldSpecified;
        
        private string maritalstatusField;
        
        private string nameField;
        
        private System.Nullable<long> panelidField;
        
        private bool panelidFieldSpecified;
        
        private long pridField;
        
        private bool pridFieldSpecified;
        
        private string prnoField;
        
        private string relationField;
        
        private string servicenoField;
        
        private string titleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BranchID {
            get {
                return this.branchIDField;
            }
            set {
                this.branchIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> F_Parent {
            get {
                return this.f_ParentField;
            }
            set {
                this.f_ParentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool F_ParentSpecified {
            get {
                return this.f_ParentFieldSpecified;
            }
            set {
                this.f_ParentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Pasword {
            get {
                return this.paswordField;
            }
            set {
                this.paswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PersonID {
            get {
                return this.personIDField;
            }
            set {
                this.personIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> S_Parent {
            get {
                return this.s_ParentField;
            }
            set {
                this.s_ParentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool S_ParentSpecified {
            get {
                return this.s_ParentFieldSpecified;
            }
            set {
                this.s_ParentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long TestID {
            get {
                return this.testIDField;
            }
            set {
                this.testIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TestIDSpecified {
            get {
                return this.testIDFieldSpecified;
            }
            set {
                this.testIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TestName {
            get {
                return this.testNameField;
            }
            set {
                this.testNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TestType {
            get {
                return this.testTypeField;
            }
            set {
                this.testTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> cellno {
            get {
                return this.cellnoField;
            }
            set {
                this.cellnoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cellnoSpecified {
            get {
                return this.cellnoFieldSpecified;
            }
            set {
                this.cellnoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> classid {
            get {
                return this.classidField;
            }
            set {
                this.classidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classidSpecified {
            get {
                return this.classidFieldSpecified;
            }
            set {
                this.classidFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string clientid {
            get {
                return this.clientidField;
            }
            set {
                this.clientidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cnic {
            get {
                return this.cnicField;
            }
            set {
                this.cnicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string dob {
            get {
                return this.dobField;
            }
            set {
                this.dobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string enteredby {
            get {
                return this.enteredbyField;
            }
            set {
                this.enteredbyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime enteredon {
            get {
                return this.enteredonField;
            }
            set {
                this.enteredonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enteredonSpecified {
            get {
                return this.enteredonFieldSpecified;
            }
            set {
                this.enteredonFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool faxSpecified {
            get {
                return this.faxFieldSpecified;
            }
            set {
                this.faxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> hphone {
            get {
                return this.hphoneField;
            }
            set {
                this.hphoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hphoneSpecified {
            get {
                return this.hphoneFieldSpecified;
            }
            set {
                this.hphoneFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string maritalstatus {
            get {
                return this.maritalstatusField;
            }
            set {
                this.maritalstatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> panelid {
            get {
                return this.panelidField;
            }
            set {
                this.panelidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool panelidSpecified {
            get {
                return this.panelidFieldSpecified;
            }
            set {
                this.panelidFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long prid {
            get {
                return this.pridField;
            }
            set {
                this.pridField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pridSpecified {
            get {
                return this.pridFieldSpecified;
            }
            set {
                this.pridFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string prno {
            get {
                return this.prnoField;
            }
            set {
                this.prnoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string relation {
            get {
                return this.relationField;
            }
            set {
                this.relationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string serviceno {
            get {
                return this.servicenoField;
            }
            set {
                this.servicenoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class Drug {
        
        private long drugIDField;
        
        private bool drugIDFieldSpecified;
        
        private string drugNameField;
        
        private long organismIDField;
        
        private bool organismIDFieldSpecified;
        
        private string organismNameField;
        
        private string sensitivityField;
        
        /// <remarks/>
        public long DrugID {
            get {
                return this.drugIDField;
            }
            set {
                this.drugIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DrugIDSpecified {
            get {
                return this.drugIDFieldSpecified;
            }
            set {
                this.drugIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DrugName {
            get {
                return this.drugNameField;
            }
            set {
                this.drugNameField = value;
            }
        }
        
        /// <remarks/>
        public long OrganismID {
            get {
                return this.organismIDField;
            }
            set {
                this.organismIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrganismIDSpecified {
            get {
                return this.organismIDFieldSpecified;
            }
            set {
                this.organismIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OrganismName {
            get {
                return this.organismNameField;
            }
            set {
                this.organismNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Sensitivity {
            get {
                return this.sensitivityField;
            }
            set {
                this.sensitivityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class AttributeViewModel {
        
        private long attributeIDField;
        
        private bool attributeIDFieldSpecified;
        
        private string attributeNameField;
        
        private string attributeTypeField;
        
        private System.Nullable<long> dOrderField;
        
        private bool dOrderFieldSpecified;
        
        private string headingField;
        
        private System.Nullable<long> linesNoField;
        
        private bool linesNoFieldSpecified;
        
        private long prIDField;
        
        private bool prIDFieldSpecified;
        
        private bool printStatusField;
        
        private bool printStatusFieldSpecified;
        
        private string rangeField;
        
        private long rangeIDField;
        
        private bool rangeIDFieldSpecified;
        
        private string rangeMaxField;
        
        private string rangeMinField;
        
        private string resultField;
        
        private long resultIDField;
        
        private bool resultIDFieldSpecified;
        
        private string unitField;
        
        /// <remarks/>
        public long AttributeID {
            get {
                return this.attributeIDField;
            }
            set {
                this.attributeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AttributeIDSpecified {
            get {
                return this.attributeIDFieldSpecified;
            }
            set {
                this.attributeIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AttributeName {
            get {
                return this.attributeNameField;
            }
            set {
                this.attributeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AttributeType {
            get {
                return this.attributeTypeField;
            }
            set {
                this.attributeTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DOrder {
            get {
                return this.dOrderField;
            }
            set {
                this.dOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DOrderSpecified {
            get {
                return this.dOrderFieldSpecified;
            }
            set {
                this.dOrderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Heading {
            get {
                return this.headingField;
            }
            set {
                this.headingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> LinesNo {
            get {
                return this.linesNoField;
            }
            set {
                this.linesNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LinesNoSpecified {
            get {
                return this.linesNoFieldSpecified;
            }
            set {
                this.linesNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long PrID {
            get {
                return this.prIDField;
            }
            set {
                this.prIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrIDSpecified {
            get {
                return this.prIDFieldSpecified;
            }
            set {
                this.prIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool PrintStatus {
            get {
                return this.printStatusField;
            }
            set {
                this.printStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrintStatusSpecified {
            get {
                return this.printStatusFieldSpecified;
            }
            set {
                this.printStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Range {
            get {
                return this.rangeField;
            }
            set {
                this.rangeField = value;
            }
        }
        
        /// <remarks/>
        public long RangeID {
            get {
                return this.rangeIDField;
            }
            set {
                this.rangeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RangeIDSpecified {
            get {
                return this.rangeIDFieldSpecified;
            }
            set {
                this.rangeIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RangeMax {
            get {
                return this.rangeMaxField;
            }
            set {
                this.rangeMaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RangeMin {
            get {
                return this.rangeMinField;
            }
            set {
                this.rangeMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public long ResultID {
            get {
                return this.resultIDField;
            }
            set {
                this.resultIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResultIDSpecified {
            get {
                return this.resultIDFieldSpecified;
            }
            set {
                this.resultIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OliveCliqService")]
    public partial class Vault {
        
        private AttributeViewModel[] attributesResultField;
        
        private Drug[] microSensitivityField;
        
        private VaultPatientInfo patientField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public AttributeViewModel[] AttributesResult {
            get {
                return this.attributesResultField;
            }
            set {
                this.attributesResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Drug[] MicroSensitivity {
            get {
                return this.microSensitivityField;
            }
            set {
                this.microSensitivityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public VaultPatientInfo Patient {
            get {
                return this.patientField;
            }
            set {
                this.patientField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SignInCompletedEventHandler(object sender, SignInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SignInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDoctorsCompletedEventHandler(object sender, GetDoctorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeactivateDoctorCompletedEventHandler(object sender, DeactivateDoctorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeactivateDoctorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeactivateDoctorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int DeactivateDoctorResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeactivateDoctorResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddToMyVaultCompletedEventHandler(object sender, AddToMyVaultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToMyVaultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToMyVaultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int AddToMyVaultResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddToMyVaultResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMyVaultCompletedEventHandler(object sender, GetMyVaultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyVaultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyVaultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDoctorsListCompletedEventHandler(object sender, GetDoctorsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddFriendCompletedEventHandler(object sender, AddFriendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFriendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFriendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFriendsCompletedEventHandler(object sender, GetFriendsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFriendsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFriendsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UnFriendCompletedEventHandler(object sender, UnFriendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnFriendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnFriendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTestsCompletedEventHandler(object sender, GetTestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAttributesCompletedEventHandler(object sender, GetAttributesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AttributeInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AttributeInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SearchMyVaultCompletedEventHandler(object sender, SearchMyVaultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchMyVaultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchMyVaultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SearchCompletedEventHandler(object sender, SearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRecipientsCompletedEventHandler(object sender, GetRecipientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecipientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecipientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Recipient[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Recipient[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetThemCompletedEventHandler(object sender, GetThemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetThemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetThemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Recipient[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Recipient[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SendMessageCompletedEventHandler(object sender, SendMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTestSpecimentListCompletedEventHandler(object sender, GetTestSpecimentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestSpecimentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestSpecimentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Specimen[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Specimen[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddSpecimenTemplateCompletedEventHandler(object sender, AddSpecimenTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSpecimenTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSpecimenTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int AddSpecimenTemplateResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddSpecimenTemplateResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetResultTemplateCompletedEventHandler(object sender, GetResultTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultTemplate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultTemplate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTemplatesCompletedEventHandler(object sender, GetTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AllTemplate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AllTemplate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTestSpecimentListDropDownCompletedEventHandler(object sender, GetTestSpecimentListDropDownCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestSpecimentListDropDownCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestSpecimentListDropDownCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecimenDropDown[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecimenDropDown[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPanelTestsCompletedEventHandler(object sender, GetPanelTestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPanelTestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPanelTestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PanelTest[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PanelTest[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPanelTestRequestsCompletedEventHandler(object sender, GetPanelTestRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPanelTestRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPanelTestRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPanelRequestsDetailCompletedEventHandler(object sender, GetPanelRequestsDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPanelRequestsDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPanelRequestsDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRequestDetailsCompletedEventHandler(object sender, GetRequestDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequestDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequestDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateRequestCompletedEventHandler(object sender, UpdateRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPanellegderDataCompletedEventHandler(object sender, GetPanellegderDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPanellegderDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPanellegderDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GEtCliqueClinicTestsCompletedEventHandler(object sender, GEtCliqueClinicTestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GEtCliqueClinicTestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GEtCliqueClinicTestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetLabTestsCompletedEventHandler(object sender, GetLabTestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLabTestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLabTestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PanelTest[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PanelTest[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMasterTestListCompletedEventHandler(object sender, GetMasterTestListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasterTestListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasterTestListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PanelTest[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PanelTest[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNewTestRequestsCompletedEventHandler(object sender, GetNewTestRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewTestRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewTestRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateorderstatusCompletedEventHandler(object sender, updateorderstatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateorderstatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateorderstatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591