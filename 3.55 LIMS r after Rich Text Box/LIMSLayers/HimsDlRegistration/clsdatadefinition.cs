using System;

namespace HimsDlRegistration
{
	/// <summary>
	/// Summary description for clsdatadefinition.
	/// </summary>
	public class clsdatadefinition
	{
		public clsdatadefinition()
		{
			//
			// TODO: Add constructor logic here
			//
		}
	
	
#region Enumeration_Stored_Procedure

	public enum SPDoctor : byte
	{
		PK_DOCTOR3P_IN_DOCTOR = 1,
		PK_DOCTOR3P_UP_DOCTOR = 2,
		PK_DOCTOR3P_DE_DOCTOR = 3,
		PK_DOCTOR3P_GA_DOCTOR = 4,
		PK_DOCTOR3P_GS_DOCTOR = 5
	}

	public enum SPFactory : byte
	{
		PK_FACTORY3P_IN_FACTORY = 1,
		PK_FACTORY3P_UP_FACTORY = 2,
		PK_FACTORY3P_DE_FACTORY = 3,
		PK_FACTORY3P_GA_FACTORY = 4,
		PK_FACTORY3P_GS_FACTORY = 5
	}

	public enum SPSection : byte
	{
		PK_SECTION3P_IN_SECTION = 1,
		PK_SECTION3P_UP_SECTION = 2,
		PK_SECTION3P_DE_SECTION = 3,
		PK_SECTION3P_GA_SECTION = 4,
		PK_SECTION3P_GS_SECTION = 5
	}

	public enum SPSpeciality : byte
	{
		PK_SPECIALITY3P_IN_SPECIALITY = 1,
		PK_SPECIALITY3P_UP_SPECIALITY = 2,
		PK_SPECIALITY3P_DE_SPECIALITY = 3,
		PK_SPECIALITY3P_GA_SPECIALITY = 4,
		PK_SPECIALITY3P_GS_SPECIALITY = 5
	}

	public enum SPDoctorspeciality : byte
	{						
		PK_DOCTORSPECIALITY3P_IN_DOCTORSPECIALITY = 1,
		PK_DOCTORSPECIALITY3P_UP_DOCTORSPECIALITY = 2,
		PK_DOCTORSPECIALITY3P_DE_DOCTORSPECIALITY = 3,
		PK_DOCTORSPECIALITY3P_GA_DOCTORSPECIALITY = 4,
		PK_DOCTORSPECIALITY3P_GS_DOCTORSPECIALITY = 5
	}

	public enum SPEmployee : byte
	{						
		PK_EMPLOYEE3P_IN_EMPLOYEE = 1,
		PK_EMPLOYEE3P_UP_EMPLOYEE = 2,
		PK_EMPLOYEE3P_DE_EMPLOYEE = 3,
		PK_EMPLOYEE3P_GA_EMPLOYEE = 4,
		PK_EMPLOYEE3P_GS_EMPLOYEE = 5
	}

	public enum SPDependent : byte
	{
		PK_DEPENDENT3P_IN_DEPENDENT = 1,
		PK_DEPENDENT3P_UP_DEPENDENT = 2,
		PK_DEPENDENT3P_DE_DEPENDENT = 3,
		PK_DEPENDENT3P_GA_DEPENDENT = 4,
		PK_DEPENDENT3P_GS_DEPENDENT = 5
	}

	public enum SPPatientvisit : byte
	{
		PK_PATIENTVISIT3P_IN_PATIENTVISIT = 1,
		PK_PATIENTVISIT3P_UP_PATIENTVISIT = 2,
		PK_PATIENTVISIT3P_DE_PATIENTVISIT = 3,
		PK_PATIENTVISIT3P_GA_PATIENTVISIT = 4,
		PK_PATIENTVISIT3P_GS_PATIENTVISIT = 5
	}

	public enum SPClinic : byte
	{
		PK_CLINIC3P_IN_CLINIC = 1,
		PK_CLINIC3P_UP_CLINIC = 2,
		PK_CLINIC3P_DE_CLINIC = 3,
		PK_CLINIC3P_GA_CLINIC = 4,
		PK_CLINIC3P_GS_CLINIC = 5
	}

	public enum SPDepartment : byte
	{
		PK_DEPARTMENT3P_IN_DEPARTMENT = 1,
		PK_DEPARTMENT3P_UP_DEPARTMENT = 2,
		PK_DEPARTMENT3P_DE_DEPARTMENT = 3,
		PK_DEPARTMENT3P_GA_DEPARTMENT = 4,
		PK_DEPARTMENT3P_GS_DEPARTMENT = 5
	}

	public enum SPEmpClass : byte
	{
		PK_EMPCLASS3P_IN_EMPCLASS = 1,
		PK_EMPCLASS3P_UP_EMPCLASS = 2,
		PK_EMPCLASS3P_DE_EMPCLASS = 3,
		PK_EMPCLASS3P_GA_EMPCLASS = 4,
		PK_EMPCLASS3P_GS_EMPCLASS = 5
	}

	public enum SPService : byte
	{
		PK_SERVICE3P_IN_SERVICE = 1,
		PK_SERVICE3P_UP_SERVICE = 2,
		PK_SERVICE3P_DE_SERVICE = 3,
		PK_SERVICE3P_GA_SERVICE = 4,
		PK_SERVICE3P_GS_SERVICE = 5
	}

	public enum SPRank : byte
	{
		PK_RANK3P_IN_RANK = 1,
		PK_RANK3P_UP_RANK = 2,
		PK_RANK3P_DE_RANK = 3,
		PK_RANK3P_GA_RANK = 4,
		PK_RANK3P_GS_RANK = 5
	}

	public enum SPServiceClass : byte
	{
		PK_SERVICECLASS3P_IN_SERVICECLASS = 1,
		PK_SERVICECLASS3P_UP_SERVICECLASS = 2,
		PK_SERVICECLASS3P_DE_SERVICECLASS = 3,
		PK_SERVICECLASS3P_GA_SERVICECLASS = 4,
		PK_SERVICECLASS3P_GS_SERVICECLASS = 5
	}

		public enum SPSpecialityType : byte
		{
			PK_SPECIALITYTYPE3P_IN_SPECIALITYTYPE = 1,
			PK_SPECIALITYTYPE3P_UP_SPECIALITYTYPE = 2,
			PK_SPECIALITYTYPE3P_DE_SPECIALITYTYPE = 3,
			PK_SPECIALITYTYPE3P_GA_SPECIALITYTYPE = 4,
			PK_SPECIALITYTYPE3P_GS_SPECIALITYTYPE = 5
		}

		public enum SPPVComment : byte
		{
			PK_PVCOMMENT3P_IN_PVCOMMENT = 1,
			PK_PVCOMMENT3P_UP_PVCOMMENT = 2,
			PK_PVCOMMENT3P_DE_PVCOMMENT = 3,
			PK_PVCOMMENT3P_GA_PVCOMMENT = 4,
			PK_PVCOMMENT3P_GS_PVCOMMENT = 5
		}

		public enum SPShuffledPatient : byte
		{
			PK_SHUFFLEDPATIENT3P_IN_SHUFFLEDPATIENT = 1,
			PK_SHUFFLEDPATIENT3P_UP_SHUFFLEDPATIENT = 2,
			PK_SHUFFLEDPATIENT3P_DE_SHUFFLEDPATIENT = 3,
			PK_SHUFFLEDPATIENT3P_GA_SHUFFLEDPATIENT = 4,
			PK_SHUFFLEDPATIENT3P_GS_SHUFFLEDPATIENT = 5
		}

		public enum SPOPDDoctorStatus : byte
		{
			PK_OPDDOCTORSTATUS3P_IN_OPDDOCTORSTATUS = 1,
			PK_OPDDOCTORSTATUS3P_UP_OPDDOCTORSTATUS = 2,
			PK_OPDDOCTORSTATUS3P_DE_OPDDOCTORSTATUS = 3,
			PK_OPDDOCTORSTATUS3P_GA_OPDDOCTORSTATUS = 4,
			PK_OPDDOCTORSTATUS3P_GS_OPDDOCTORSTATUS = 5
		}

		public enum SPPreferenceTable : byte
		{
			PK_PREFERENCETABLE3P_IN_PREFERENCETABLE = 1,
			PK_PREFERENCETABLE3P_UP_PREFERENCETABLE = 2,
			PK_PREFERENCETABLE3P_DE_PREFERENCETABLE = 3,
			PK_PREFERENCETABLE3P_GA_PREFERENCETABLE = 4,
			PK_PREFERENCETABLE3P_GS_PREFERENCETABLE = 5
		}

		public enum SPTPersonnel : byte
		{
			PK_TPERSONNEL3P_IN_TPERSONNEL = 1,
			PK_TPERSONNEL3P_UP_TPERSONNEL = 2,
			PK_TPERSONNEL3P_DE_TPERSONNEL = 3,
			PK_TPERSONNEL3P_GA_TPERSONNEL = 4,
			PK_TPERSONNEL3P_GS_TPERSONNEL = 5
		}

		public enum SPOrganizations : byte
		{
			PK_ORGANIZATIONS3P_IN_ORGANIZATIONS = 1,
			PK_ORGANIZATIONS3P_UP_ORGANIZATIONS = 2,
			PK_ORGANIZATIONS3P_DE_ORGANIZATIONS = 3,
			PK_ORGANIZATIONS3P_GA_ORGANIZATIONS = 4,
			PK_ORGANIZATIONS3P_GS_ORGANIZATIONS = 5
		}

		public enum SPTPVRegistration: byte
		{
			PK_TPATIENTREGISTRATION3P_IN_TPATIENTREGISTRATION = 1,
			PK_TPATIENTREGISTRATION3P_UP_TPATIENTREGISTRATION = 2,
			PK_TPATIENTREGISTRATION3P_DE_TPATIENTREGISTRATION = 3,
			PK_TPATIENTREGISTRATION3P_GA_TPATIENTREGISTRATION = 4,
			PK_TPATIENTREGISTRATION3P_GS_TPATIENTREGISTRATION = 5
		}

		public enum SPTDesignation : byte
		{
			PK_TDESIGNATION3P_IN_TDESIGNATION = 1,
			PK_TDESIGNATION3P_UP_TDESIGNATION = 2,
			PK_TDESIGNATION3P_DE_TDESIGNATION = 3,
			PK_TDESIGNATION3P_GA_TDESIGNATION = 4,
			PK_TDESIGNATION3P_GS_TDESIGNATION = 5
		}

		public enum SPTPatientVisit : byte
		{
			PK_TPATIENTVISIT3P_IN_TPATIENTVISIT = 1,
			PK_TPATIENTVISIT3P_UP_TPATIENTVISIT = 2,
			PK_TPATIENTVISIT3P_DE_TPATIENTVISIT = 3,
			PK_TPATIENTVISIT3P_GA_TPATIENTVISIT = 4,
			PK_TPATIENTVISIT3P_GS_TPATIENTVISIT = 5
		}

		public enum SPTDsgSpecialty : byte
		{
			PK_TDSGSPECIALTY3P_IN_TDSGSPECIALTY = 1,
			PK_TDSGSPECIALTY3P_UP_TDSGSPECIALTY = 2,
			PK_TDSGSPECIALTY3P_DE_TDSGSPECIALTY = 3,
			PK_TDSGSPECIALTY3P_GA_TDSGSPECIALTY = 4,
			PK_TDSGSPECIALTY3P_GS_TDSGSPECIALTY = 5
		}

		public enum SPTPersonnelSpecialty : byte
		{
			PK_TPERSONNELSPECIALTY3P_IN_TPERSONNELSPECIALTY = 1,
			PK_TPERSONNELSPECIALTY3P_UP_TPERSONNELSPECIALTY = 2,
			PK_TPERSONNELSPECIALTY3P_DE_TPERSONNELSPECIALTY = 3,
			PK_TPERSONNELSPECIALTY3P_GA_TPERSONNELSPECIALTY = 4,
			PK_TPERSONNELSPECIALTY3P_GS_TPERSONNELSPECIALTY = 5
		}

		public enum SPServicesAvailed : byte
		{
			PK_SERVICESAVAILED3P_IN_SERVICESAVAILED = 1,
			PK_SERVICESAVAILED3P_UP_SERVICESAVAILED = 2,
			PK_SERVICESAVAILED3P_DE_SERVICESAVAILED = 3,
			PK_SERVICESAVAILED3P_GA_SERVICESAVAILED = 4,
			PK_SERVICESAVAILED3P_GS_SERVICESAVAILED = 5
		}

		public enum SPTDisease : byte
		{
			PK_DISEASE3P_IN_DISEASE = 1,
			PK_DISEASE3P_UP_DISEASE = 2,
			PK_DISEASE3P_DE_DISEASE = 3,
			PK_DISEASE3P_GA_DISEASE = 4,
			PK_DISEASE3P_GS_DISEASE = 5
		}

#endregion

#region Struct_Stored_Procedure
	public struct StoredProcedure
	{
		public SPDoctor DOCTOR;
		public SPFactory FACTORY;
		public SPSection SECTION;
		public SPSpeciality SPECIALITY;
		public SPDoctorspeciality DOCTORSPECIALITY;
		public SPEmployee EMPLOYEE;
		public SPDependent DEPENDENT;
		public SPPatientvisit PATIENTVISIT;
		public SPClinic CLINIC;
		public SPDepartment DEPARTMENT;
		public SPEmpClass EMPCLASS;
		public SPService SERVICE;	
		public SPRank RANK;	
		public SPServiceClass SERVICECLASS;			
		public SPSpecialityType SPECIALITYTYPE;
		public SPPVComment PVCOMMENT;
		public SPShuffledPatient SHUFFLEDPATIENT;
		public SPOPDDoctorStatus OPDDOCTORSTATUS;
		public SPPreferenceTable PREFERENCETABLE;
		public SPTPersonnel TPERSONNEL;
		public SPOrganizations ORGANIZATIONS;		
		public SPTPVRegistration TPATIENTREGISTRATION;
		public SPTDesignation TDESIGNATION;
		public SPTPatientVisit TPATIENTVISIT;
		public SPTDsgSpecialty TDSGSPECIALTY;
		public SPTPersonnelSpecialty TPERSONNELSPECIALTY;
		public SPServicesAvailed SERVICESAVAILED;
		public SPTDisease TDISEASE;
	}

#endregion
	}
}
